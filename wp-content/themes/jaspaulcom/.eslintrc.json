{
  "extends": [
    // By extending from a plugin config, we can get recommended rules without having to add them manually.
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:import/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:@typescript-eslint/recommended",
    // This disables the formatting rules in ESLint that Prettier is going to be responsible for handling.
    // Make sure it's always the last config, so it gets the chance to override other configs.
    "eslint-config-prettier"
  ],
  "settings": {
    "react": {
      // Tells eslint-plugin-react to automatically detect the version of React to use.
      "version": "detect"
    },
    // Tells eslint how to resolve imports
    "import/resolver": {
      "node": {
        "paths": ["src"],
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "rules": {
    "prefer-const": 0,
    "react/jsx-uses-vars": 1,
    "react/jsx-uses-react": 1,
    "strict": 0,
    "no-console": ["warn", { "allow": ["error", "info"] }],
    "no-unused-vars": "off",
    "no-debugger": "off",
    "no-extra-semi": 0,
    "react/no-unescaped-entities": ["error", { "forbid": [">", "}"] }],
    "@typescript-eslint/no-extra-semi": 0,
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      { "args": "all", "argsIgnorePattern": "^_" }
    ]
  }
}
